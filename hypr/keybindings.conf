## █░█ ██▄ ░█░ █▄█ █ █░▀█ █▄▀ █ █░▀█ █▄█ ▄█

# see https://wiki.hyprland.org/configuring/keywords/ for more
# example binds, see https://wiki.hyprland.org/configuring/binds/ for more

# Grouping of binds for easier management
#  $d=[Group Name|Subgroup Name1|Subgroup Name2|...]
# '$d' is a variable that is used to group binds together (or use another variable)
# This is only for organization purposes and is not a defined hyprland variable
# What we did here is to modify the Description of the binds to include the group name
# The $d will be parsed as a separate key to be use for a GUI or something pretty
# [Main|Subgroup1|Subgroup2|...]
# Main - The main groupname
# Subgroup1.. - The subgroup names can be use to avoid repeating the same description


#*  Variables 
# Default if commented out
$mainMod = Control # super / meta / windows key
$winMod = Super
$altMod = Alt
# Assign apps
# $TERMINAL = kitty
# $EDITOR = code
# $EXPLORER = dolphin
# $BROWSER = firefox

$wm=Window Management
$d=[$wm]
bindd = $mainMod, Q, $d close focused window, exec, $scrPath/dontkillsteam.sh
bindd = Alt, F4, $d close focused window, exec, $scrPath/dontkillsteam.sh
bindd = $mainMod, Delete, $d kill hyprland session, exit
bindd = $mainMod Shift, T, $d toggle float, togglefloating, #
# bindd = $mainMod, G, $d toggle group, togglegroup
bindd = Shift, F11, $d toggle fullscreen, fullscreen
# bindd = $mainMod, L, $d lock screen, exec, lockscreen.sh
bindd = $mainMod Shift, F, $d toggle pin on focused window, exec, $scrPath/windowpin.sh
bindd = Control Alt, Delete, $d logout menu, exec, $scrPath/logoutlaunch.sh
bindd = Alt_R, Control_R, $d toggle waybar and reload config, exec, killall waybar || (env reload_flag=1 $scrPath/wbarconfgen.sh)
# bindd = ALT_R, Control_R,toggle waybar, exec, killall waybar || waybar # toggle waybar without reloading, this is faster

# $d=[$wm|Change focus]
# bindd = $winMod Shift, h, $d focus left, movefocus, h
# bindd = $mainMod Shift, Right, $d focus right , movefocus, l
# bindd = $winMod Shift , k, $d focus up , movefocus, k
# bindd = $winMod Shift, j , $d focus down, movefocus, j
# # bindd = Alt, TAB, $d focus , movefocus, d,


# Move focus
bind = Alt Shift, h, movefocus, l
bind = Alt Shift, j, movefocus, d
bind = Alt Shift, k, movefocus, u
bind = Alt Shift, l, movefocus, r

$d=[$wm|Resize Active Window]
# Resize windows
# bindde = $mainMod Shift, Right, $d resize window right , resizeactive, 30 0
# bindde = $mainMod Shift, Left, $d resize window left, resizeactive, -30 0
# bindde = $mainMod Shift, Up, $d resize window up, resizeactive, 0 -30
# bindde = $mainMod Shift, Down, $d resize  window down, resizeactive, 0 30

# Move active window around current workspace with mainMod + Shift + Control [←→↑↓]
$d=[$wm|Move active window across workspace]
$moveactivewindow=grep -q "true" <<< $(hyprctl activewindow -j | jq -r .floating) && hyprctl dispatch moveactive
bindde = Control Alt , left, Move activewindow to the left, exec, $moveactivewindow -30 0 || hyprctl dispatch movewindow l
bindde = Control Alt , right, Move activewindow to the right, exec, $moveactivewindow 30 0 || hyprctl dispatch movewindow r
bindde = Control Alt , up, Move activewindow up, exec, $moveactivewindow  0 -30 || hyprctl dispatch movewindow u
bindde = Control Alt , down, Move activewindow down, exec, $moveactivewindow 0 30 || hyprctl dispatch movewindow d

# Move/Resize focused window
$d=[$wm|Move & Resize with mouse]
binddm = $winMod, mouse:272, $d hold to move window, movewindow
binddm = $winMod, mouse:273, $d hold to resize window, resizewindow


$l=Launcher
$d=[$l|Apps]
bindd = Control Shift, Escape, $d system monitor , exec, $scrPath/sysmonlaunch.sh

$d=[$l|Rofi menus]
$rofi-launch=$scrPath/rofilaunch.sh
bindd = $mainMod, space, $d application finder , exec, pkill -x rofi || $rofi-launch d
bindd = $altMod, TAB, $d window switcher , exec, pkill -x rofi || $rofi-launch w
bindd = $winMod Shift, E, $d file finder , exec, pkill -x rofi || $rofi-launch f
bindd = $winMod, slash, $d keybindings hint, exec, pkill -x rofi || $scrPath/keybinds_hint.sh c # launch keybinds hint
bindd = $winMod, period, $d emoji  picker , exec, pkill -x rofi || $scrPath/emoji-picker.sh # launch emoji picker
bindd = $winMod, comma, $d glyph picker , exec, pkill -x rofi || $scrPath/glyph-picker.sh # launch glyph picker
bindd = $winMod, V, $d clipboard ,  exec, pkill -x rofi || $scrPath/cliphist.sh -c # launch clipboard,
bindd = $winMod Shift, V, $d clipboard manager , exec, pkill -x rofi || $scrPath/cliphist.sh # launch clipboard Manager
bindd = $winMod Shift, A, $d select rofi launcher , exec, pkill -x rofi || $scrPath/rofiselect.sh # launch select menu


$hc=Hardware Controls
$d=[$hc|Audio]
binddl  = , F10, $d toggle mute output , exec, $scrPath/volumecontrol.sh -o m # toggle audio mute
binddl  = , XF86AudioMute,$d  toggle mute output, exec, $scrPath/volumecontrol.sh -o m # toggle audio mute
binddel = , F11, $d decrease volume , exec, $scrPath/volumecontrol.sh -o d # decrease volume
binddel = , F12, $d increase volume , exec, $scrPath/volumecontrol.sh -o i # increase volume
binddl  = , XF86AudioMicMute,$d un/mute microphone  , exec, $scrPath/volumecontrol.sh -i m # toggle microphone mute
binddel = , XF86AudioLowerVolume, $d decrease volume , exec, $scrPath/volumecontrol.sh -o d # decrease volume
binddel = , XF86AudioRaiseVolume, $d increase volume , exec, $scrPath/volumecontrol.sh -o i # increase volume

$d=[$hc|Media]
binddl  = , XF86AudioPlay,$d play media, exec, playerctl play-pause # toggle between media play and pause
binddl  = , XF86AudioPause,$d pause media, exec, playerctl play-pause # toggle between media play and pause
binddl  = , XF86AudioNext,$d next media  , exec, playerctl next # media next
binddl  = , XF86AudioPrev,$d  previous media , exec, playerctl previous # media previous

$d=[$hc|Brightness]
binddel = , XF86MonBrightnessUp, $d increase brightness , exec, $scrPath/brightnesscontrol.sh i # increase brightness
binddel = , XF86MonBrightnessDown, $d decrease brightness , exec, $scrPath/brightnesscontrol.sh d # decrease brightness


$ut=Utilities
$d=[$ut]
# bindd = $winMod Alt, G, $d game mode , exec, $scrPath/gamemode.sh # disable hypr effects for gamemode

$d=[$ut|Screen Capture]
# bindd = $mainMod Shift, P, $d color picker, exec, hyprpicker -an # Pick color (Hex) >> clipboard#
bindd = $winMod Shift, S, $d snip screen , exec, $scrPath/screenshot.sh s # partial screenshot capture
# bindd = $mainMod Control, P, $d freeze and snip screen, exec, $scrPath/screenshot.sh sf # partial screenshot capture (frozen screen)
# binddl = $mainMod Alt, P, $d print monitor , exec, $scrPath/screenshot.sh m # monitor screenshot capture
# binddl = , Print, $d print all monitors , exec, $scrPath/screenshot.sh p # all monitors screenshot capture

# TODO Make a main rofi menu for these selectors
$rice=Theming and Wallpaper
$d=[$rice]
# bindd = $winMod Alt, Right, $d next global wallpaper , exec, $scrPath/wallpaper.sh -Gn # next global wallpaper
# bindd = $winMod Alt, Left, $d previous global wallpaper , exec, $scrPath/wallpaper.sh -Gp # previous global wallpaper
bindd = $winMod Shift, W, $d select a global wallpaper , exec, pkill -x rofi || $scrPath/wallpaper.sh -SG # launch wallpaper select menu
bindd = $winMod Alt, Up, $d next waybar layout , exec, $scrPath/wbarconfgen.sh n # next waybar mode
bindd = $winMod Alt, Down, $d previous waybar layout , exec, $scrPath/wbarconfgen.sh p # previous waybar mode
bindd = $winMod Shift, R, $d wallbash mode selector , exec, pkill -x rofi || $scrPath/wallbashtoggle.sh -m # launch wallbash mode select menu
bindd = $winMod Shift, T, $d select a theme, exec, pkill -x rofi || $scrPath/themeselect.sh # launch theme select menu



# Move focused window to workspace silently (Yabai-style)
$d=[$ws|Navigation|Move window silently]
bindd = $winMod SHIFT, 1, $d move to workspace 1 (silent), movetoworkspacesilent, 1
bindd = $winMod SHIFT, 2, $d move to workspace 2 (silent), movetoworkspacesilent, 2
bindd = $winMod SHIFT, 3, $d move to workspace 3 (silent), movetoworkspacesilent, 3
bindd = $winMod SHIFT, 4, $d move to workspace 4 (silent), movetoworkspacesilent, 4
bindd = $winMod SHIFT, 5, $d move to workspace 5 (silent), movetoworkspacesilent, 5
bindd = $winMod SHIFT, 6, $d move to workspace 6 (silent), movetoworkspacesilent, 6
bindd = $winMod SHIFT, 7, $d move to workspace 7 (silent), movetoworkspacesilent, 7
bindd = $winMod SHIFT, 8, $d move to workspace 8 (silent), movetoworkspacesilent, 8
bindd = $winMod SHIFT, 9, $d move to workspace 9 (silent), movetoworkspacesilent, 9
bindd = $winMod SHIFT, 0, $d move to workspace 10 (silent), movetoworkspacesilent, 10


$d=#! unset the group name
